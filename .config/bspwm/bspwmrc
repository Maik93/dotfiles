#!/bin/sh

main_monitor='eDP-1'
second_monitor='DP-1-0.8'
third_monitor='DP-1-0.1.8'

is_external_monitor_present=$(xrandr --query | grep "^${second_monitor} connected")
is_hdmi_present=$(xrandr --query | grep '^HDMI-1-0 connected')
#is_usb_c_adaptor_present=$(xrandr --query | grep '^DP-1 connected')
if [[ -n $is_external_monitor_present ]]; then
    export XCURSOR_SIZE=8

	is_third_monitor_present=$(xrandr --query | grep "^${third_monitor} connected")
    if [[ $is_third_monitor_present ]]; then
        ~/.screenlayout/3_usbC.sh
        bspc monitor "%${main_monitor}" -d 1 2 3
        bspc monitor "%${second_monitor}" -d 4 5 6 7
        bspc monitor "%${third_monitor}" -d 8 9 10
        bspc wm -O "${main_monitor}" "${second_monitor}" "${third_monitor}"
    else
        ~/.screenlayout/2_usbC.sh
        bspc monitor "${main_monitor}" -d 1 2 3 4 5
        bspc monitor "%${second_monitor}" -d 6 7 8 9 10
        bspc wm -O "${main_monitor}" "${second_monitor}"
    fi

elif [[ $is_hdmi_present ]]; then
    export XCURSOR_SIZE=16
    #~/.screenlayout/1_HDMI_left.sh
    #~/.screenlayout/1_HDMI_top.sh
    ~/.screenlayout/1_HDMI_right.sh
    bspc monitor "%${main_monitor}" -d 1 2 3 4 5 6
    bspc monitor HDMI-1-0 -d 7 8 9 10
	bspc wm -O "%${main_monitor}" HDMI-1-0
#
#elif [[ $is_usb_c_adaptor_present ]]; then
#    export XCURSOR_SIZE=16
#    ~/.screenlayout/1_USB_C_left.sh
#    bspc monitor "%${main_monitor}" -d 1 2 3 4 5 6
#    bspc monitor DP-1 -d 7 8 9 10
#    bspc wm -O "%${main_monitor}" DP-1
	
	bspc rule -a TelegramDesktop state=floating center=true follow=true

else
    xrandr --auto
    bspc monitor -d 1 2 3 4 5 6 7 8 9 10
    # ~/.local/bin/floating_ws_5.sh & # any windows in WS 5 will be floating
	
	bspc rule -a TelegramDesktop state=floating center=true follow=true desktop='^7'

    # Picom (compositor)
    #picom --xrender-sync-fence &
fi

# Get window names with `xprop | grep 'CLASS'`
bspc rule -a kitty:ranger state=pseudo_tiled rectangle=widthxheight+Xoffset+Yoffset
bspc rule -a kitty:yazi state=pseudo_tiled rectangle=widthxheight+Xoffset+Yoffset
bspc rule -a kitty:scratchy state=floating rectangle=widthxheight+Xoffset+Yoffset
bspc rule -a kitty:big-scratchy state=pseudo_tiled rectangle=widthxheight+Xoffset+Yoffset
bspc rule -a Google-chrome desktop='^1' follow=true
bspc rule -a Chromium desktop='^1' follow=true
bspc rule -a Brave-browser desktop='^1' follow=true
bspc rule -a firefox desktop='^1' follow=true
bspc rule -a Thunar follow=true state=pseudo_tiled
bspc rule -a org.gnome.Nautilus follow=true state=pseudo_tiled
bspc rule -a File-roller follow=true state=pseudo_tiled
bspc rule -a MEGAsync follow=true state=floating

bspc rule -a Virt-manager follow=true state=floating
bspc rule -a "VirtualBox Manager" follow=true state=floating
bspc rule -a "Microsoft PowerPoint" follow=true state=floating

bspc rule -a Blender follow=true state=floating

bspc rule -a SimpleScreenRecorder follow=true state=pseudo_tiled
bspc rule -a QjackCtl follow=true state=pseudo_tiled

bspc rule -a jetbrains-pycharm follow=true state=floating
bspc rule -a jetbrains-clion follow=true state=floating
bspc rule -a jetbrains-webstorm follow=true state=floating
bspc rule -a Matplotlib follow=true state=floating
bspc rule -a "MATLAB R2019b - academic use" follow=true state=pseudo_tiled
bspc rule -a MATLABWindow follow=true center=true state=floating

bspc rule -a Blueberry.py state=floating center=true follow=true
bspc rule -a Signal state=floating center=true follow=true
bspc rule -a discord desktop='^8' state=pseudo_tiled center=true follow=true
bspc rule -a Slack desktop='^8' state=pseudo_tiled center=true follow=true
bspc rule -a Spotify desktop='^9' follow=true

bspc rule -a Qemu-system-x86_64 follow=true state=floating

bspc rule -a qFlipper follow=true state=pseudo_tiled rectangle=862x532+0+0

bspc config normal_border_color "#4f515c"
bspc config active_border_color "#4f515c"
bspc config focused_border_color "#ffb86c" # "#20ba63" # "#3c7f59"
bspc config presel_feedback_color "#6272a4"

bspc config border_width          4
bspc config window_gap           12

bspc config split_ratio          0.52
bspc config borderless_monocle   true
bspc config gapless_monocle      true

# --------------------------------
# ------- Non-BSPWM related ------
# --------------------------------
# Set wallpaper
feh --bg-fill ~/Documents/Wallpapers/howl_sophie.jpg
# Reload .Xresources
xrdb -load ~/.Xresources
# Launch polybar
~/.config/polybar/launch.sh
# Change from ugly 'X' cursor when hovering over background
xsetroot -cursor_name left_ptr
# Make betterlockscreen generate and cache a background image for locking
betterlockscreen -u ~/Documents/Wallpapers/wale.jpg

# ------- Autostart apps ------
# Dunst (notifications)
killall -q dunst
dunst &

# Nm-applet
#nm-applet &

# Blue-light dimmer
#killall -q redshift
#while pgrep -u $UID -x redshift > /dev/null; do sleep 1; done
#redshift &

# Battery status notifications: warn at 25%, critical at 15% and shutdown at 10%
killall -q batsignal
batsignal -b -n BAT0 -w 25 -c 15 -d 10 -D 'systemctl poweroff'

# ------- Touchpad fixes ------
[ -f ~/.local/autorun/rogue_touchpad_setup.sh ] && ~/.local/autorun/rogue_touchpad_setup.sh

# ------- Keyboard fixes ------
# Remap Caps-lock key to Escape, for using VIM
# setxkbmap -option caps:escape
setxkbmap -layout us -variant intl

# keybinding handler
sxhkd &

# Fix for Jetbrains IDEs
wmname LG3D

# allow Docker to open X11 windows
xhost +local:docker

#export GPG_TTY=$(tty)
