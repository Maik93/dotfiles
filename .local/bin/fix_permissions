#!/bin/bash
set -e

usage() {
    echo
    echo "Usage: `basename $0` [-o user:group] [-d] [-s] directory [-h]"
    echo "  o   set owner, e.g. '-o `id -un`:`id -gn`'."
    echo "  d   just fix directories."
    echo "  s   use sudo."
    echo "  h   help and usage message."
    echo
}

set_owner=false
sudo_cmd=''

# `getopts` ref: https://www.computerhope.com/unix/bash/getopts.htm
while getopts "o:sdh" arg; do
    case $arg in
        o) set_owner=true; new_owner=${OPTARG};;
        d) just_dirs=true;;
        s) sudo_cmd='sudo';;
        h) echo "Set directory permissions to 755 and files to 644. Optionally set owner too."; usage; exit 0;;
        ?) echo "Unknown option: -$OPTARG" >&2; usage; exit 1;;
        :) echo "Missing option argument for -$OPTARG" >&2; usage; exit 1;;
    esac
done

# get remaining arguments after options
shift $(($OPTIND - 1))
dirToFix="$@"
if [[ -z $dirToFix ]]; then
    echo 'Missing target directory.' >&2; usage; exit 1
fi

# Setup find correctly
export IFS=$'\n'

# Loop through our array
for x in ${dirToFix[@]}; do
    # directories & subdirectories
	echo "Fixing directory permissions..."
    for i in $($sudo_cmd find $x -type d); do
        $set_owner && $sudo_cmd chown -c $new_owner $i
        $sudo_cmd chmod -c 775 $i
    done

    if [ "$just_dirs" = true ]; then
        continue
    fi

    # files
	echo "Fixing file permissions..."
    for i in $($sudo_cmd find $x -type f); do
        $set_owner && $sudo_cmd chown -c $new_owner $i
        $sudo_cmd chmod -c 664 $i
    done
done

echo "Permissions recursively fixed succesfully."
